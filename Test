# Define an array of server names
$servers =  'ALDUATDBBHAR01.CHICAGO.LOCAL','ALDUATDBBHAR01.CHICAGO.LOCAL','ALDUATDBBHME01.CHICAGO.LOCAL','ALDUATDBMPMD01.CHICAGO.LOCAL','ALDUATDBSMNY01.CHICAGO.LOCAL','ALDUATDBLWWA01.CHICAGO.LOCAL','ALDUATDBBRIF01.CHICAGO.LOCAL','ALDUATDBPHKY01.CHICAGO.LOCAL','ALDUATDBCCHHS01.CHICAGO.LOCAL','ALDUATDBNMHC01.CHICAGO.LOCAL','ALDUATDBNPA01.CHICAGO.LOCAL','ALDUATDBCMIL01.CHICAGO.LOCAL','ALDUATDBMABR01.CHICAGO.LOCAL','ALDUATDBMAMC01.CHICAGO.LOCAL','ALDUATDBPMAK01.CHICAGO.LOCAL','ALDUATDBPMWA01.CHICAGO.LOCAL'
# Define the number of days after which the files should be deleted
$days = 59 

# Loop through each server in the array
foreach ($server in $servers) {
    # Use Invoke-Command to run the script block on the remote server
    Invoke-Command -Computername $server -ScriptBlock {
        # Get all files in the "H:\BATCH\OutData\Extracts" folder, excluding the "Archive" folder
        # and delete the files that are older than $days days
        Get-ChildItem –Path "H:\BATCH\OutData\Extracts" -Recurse -exclude Archive | Where-Object {($_.LastWriteTime -lt (Get-Date).AddDays(-$using:days))} | Remove-Item
        
        # Get all files in the "H:\BATCH\OutData\PRINTFILES" folder, excluding the "Archive" folder
        # and delete the files that are older than $days days
        Get-ChildItem –Path "H:\BATCH\OutData\PRINTFILES" -Recurse -exclude Archive | Where-Object {($_.LastWriteTime -lt (Get-Date).AddDays(-$using:days))} | Remove-Item
    }
}
