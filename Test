                   $result | Format-Pester -Format html -Path $env:TEMP -ReportTitle "Report for $($objEnvironmentApplication.Name)";

                    Send-MailMessage -From $SMTPFrom -to $SMTPTo -Subject "Failure Report for Environment '$($objEnvironmentApplication.Name)' - $($result.FailedCount) Failed Tests" -Body "$(Get-Content $Env:TEMP\Pester_Results.html)" -BodyAsHtml -SmtpServer $SMTPServer;
            }


# Read the JSON file
$json = Get-Content -Path .\Filejson.json

# Convert the JSON to a PowerShell object
$serviceObject = $json | ConvertFrom-Json

# Pester Test
Describe "$($serviceObject.ServiceName) Service Test" {
    Context "Service Existence" {
        It "$($serviceObject.ServiceName) Service should exist" {
            (Get-Service -Name $serviceObject.ServiceName | Should -Not -BeNullOrEmpty)
        }
    }

    Context "Service Status" {
        It "$($serviceObject.ServiceName) Service should be running" {
            (Get-Service -Name $serviceObject.ServiceName).Status | Should -Be 'Runnin'
        }
    }
}

{
    "ServiceName": "Intel PDS"
}
